<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leoli.inhouse.web.dao.mapper.PosBaseStationMapper">
  <resultMap id="BaseResultMap" type="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="base_no" jdbcType="VARCHAR" property="baseNo" />
    <result column="group_code" jdbcType="VARCHAR" property="groupCode" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="main" jdbcType="INTEGER" property="main" />
    <result column="time_correction_value" jdbcType="VARCHAR" property="timeCorrectionValue" />
    <result column="coordx" jdbcType="DOUBLE" property="coordx" />
    <result column="coordy" jdbcType="DOUBLE" property="coordy" />
    <result column="coordz" jdbcType="DOUBLE" property="coordz" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="install_time" jdbcType="TIMESTAMP" property="installTime" />
    <result column="upload_type" jdbcType="INTEGER" property="uploadType" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="zone" jdbcType="VARCHAR" property="zone" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="work" jdbcType="BIT" property="work" />
    <result column="lose_rate" jdbcType="DOUBLE" property="loseRate" />
    <result column="alarm" jdbcType="INTEGER" property="alarm" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, base_no, group_code, ip, main, time_correction_value, coordx, coordy, coordz, 
    name, install_time, upload_type, location, zone, owner, work, lose_rate, alarm, create_user, 
    create_time, update_user, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStationExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pos_base_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_station
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pos_base_station
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStationExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pos_base_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pos_base_station (base_no, group_code, ip, 
      main, time_correction_value, coordx, 
      coordy, coordz, name, 
      install_time, upload_type, location, 
      zone, owner, work, lose_rate, 
      alarm, create_user, create_time, 
      update_user, update_time, description
      )
    values (#{baseNo,jdbcType=VARCHAR}, #{groupCode,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{main,jdbcType=INTEGER}, #{timeCorrectionValue,jdbcType=VARCHAR}, #{coordx,jdbcType=DOUBLE}, 
      #{coordy,jdbcType=DOUBLE}, #{coordz,jdbcType=DOUBLE}, #{name,jdbcType=VARCHAR}, 
      #{installTime,jdbcType=TIMESTAMP}, #{uploadType,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, 
      #{zone,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, #{work,jdbcType=BIT}, #{loseRate,jdbcType=DOUBLE}, 
      #{alarm,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pos_base_station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="baseNo != null">
        base_no,
      </if>
      <if test="groupCode != null">
        group_code,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="main != null">
        main,
      </if>
      <if test="timeCorrectionValue != null">
        time_correction_value,
      </if>
      <if test="coordx != null">
        coordx,
      </if>
      <if test="coordy != null">
        coordy,
      </if>
      <if test="coordz != null">
        coordz,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="installTime != null">
        install_time,
      </if>
      <if test="uploadType != null">
        upload_type,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="zone != null">
        zone,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="work != null">
        work,
      </if>
      <if test="loseRate != null">
        lose_rate,
      </if>
      <if test="alarm != null">
        alarm,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="baseNo != null">
        #{baseNo,jdbcType=VARCHAR},
      </if>
      <if test="groupCode != null">
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="main != null">
        #{main,jdbcType=INTEGER},
      </if>
      <if test="timeCorrectionValue != null">
        #{timeCorrectionValue,jdbcType=VARCHAR},
      </if>
      <if test="coordx != null">
        #{coordx,jdbcType=DOUBLE},
      </if>
      <if test="coordy != null">
        #{coordy,jdbcType=DOUBLE},
      </if>
      <if test="coordz != null">
        #{coordz,jdbcType=DOUBLE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="installTime != null">
        #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadType != null">
        #{uploadType,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="zone != null">
        #{zone,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        #{work,jdbcType=BIT},
      </if>
      <if test="loseRate != null">
        #{loseRate,jdbcType=DOUBLE},
      </if>
      <if test="alarm != null">
        #{alarm,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStationExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pos_base_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.baseNo != null">
        base_no = #{record.baseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.groupCode != null">
        group_code = #{record.groupCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.main != null">
        main = #{record.main,jdbcType=INTEGER},
      </if>
      <if test="record.timeCorrectionValue != null">
        time_correction_value = #{record.timeCorrectionValue,jdbcType=VARCHAR},
      </if>
      <if test="record.coordx != null">
        coordx = #{record.coordx,jdbcType=DOUBLE},
      </if>
      <if test="record.coordy != null">
        coordy = #{record.coordy,jdbcType=DOUBLE},
      </if>
      <if test="record.coordz != null">
        coordz = #{record.coordz,jdbcType=DOUBLE},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.installTime != null">
        install_time = #{record.installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uploadType != null">
        upload_type = #{record.uploadType,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.zone != null">
        zone = #{record.zone,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null">
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null">
        work = #{record.work,jdbcType=BIT},
      </if>
      <if test="record.loseRate != null">
        lose_rate = #{record.loseRate,jdbcType=DOUBLE},
      </if>
      <if test="record.alarm != null">
        alarm = #{record.alarm,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    set id = #{record.id,jdbcType=INTEGER},
      base_no = #{record.baseNo,jdbcType=VARCHAR},
      group_code = #{record.groupCode,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      main = #{record.main,jdbcType=INTEGER},
      time_correction_value = #{record.timeCorrectionValue,jdbcType=VARCHAR},
      coordx = #{record.coordx,jdbcType=DOUBLE},
      coordy = #{record.coordy,jdbcType=DOUBLE},
      coordz = #{record.coordz,jdbcType=DOUBLE},
      name = #{record.name,jdbcType=VARCHAR},
      install_time = #{record.installTime,jdbcType=TIMESTAMP},
      upload_type = #{record.uploadType,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      zone = #{record.zone,jdbcType=VARCHAR},
      owner = #{record.owner,jdbcType=VARCHAR},
      work = #{record.work,jdbcType=BIT},
      lose_rate = #{record.loseRate,jdbcType=DOUBLE},
      alarm = #{record.alarm,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    set id = #{record.id,jdbcType=INTEGER},
      base_no = #{record.baseNo,jdbcType=VARCHAR},
      group_code = #{record.groupCode,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      main = #{record.main,jdbcType=INTEGER},
      time_correction_value = #{record.timeCorrectionValue,jdbcType=VARCHAR},
      coordx = #{record.coordx,jdbcType=DOUBLE},
      coordy = #{record.coordy,jdbcType=DOUBLE},
      coordz = #{record.coordz,jdbcType=DOUBLE},
      name = #{record.name,jdbcType=VARCHAR},
      install_time = #{record.installTime,jdbcType=TIMESTAMP},
      upload_type = #{record.uploadType,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      zone = #{record.zone,jdbcType=VARCHAR},
      owner = #{record.owner,jdbcType=VARCHAR},
      work = #{record.work,jdbcType=BIT},
      lose_rate = #{record.loseRate,jdbcType=DOUBLE},
      alarm = #{record.alarm,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    <set>
      <if test="baseNo != null">
        base_no = #{baseNo,jdbcType=VARCHAR},
      </if>
      <if test="groupCode != null">
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="main != null">
        main = #{main,jdbcType=INTEGER},
      </if>
      <if test="timeCorrectionValue != null">
        time_correction_value = #{timeCorrectionValue,jdbcType=VARCHAR},
      </if>
      <if test="coordx != null">
        coordx = #{coordx,jdbcType=DOUBLE},
      </if>
      <if test="coordy != null">
        coordy = #{coordy,jdbcType=DOUBLE},
      </if>
      <if test="coordz != null">
        coordz = #{coordz,jdbcType=DOUBLE},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="installTime != null">
        install_time = #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadType != null">
        upload_type = #{uploadType,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="zone != null">
        zone = #{zone,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        work = #{work,jdbcType=BIT},
      </if>
      <if test="loseRate != null">
        lose_rate = #{loseRate,jdbcType=DOUBLE},
      </if>
      <if test="alarm != null">
        alarm = #{alarm,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    set base_no = #{baseNo,jdbcType=VARCHAR},
      group_code = #{groupCode,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      main = #{main,jdbcType=INTEGER},
      time_correction_value = #{timeCorrectionValue,jdbcType=VARCHAR},
      coordx = #{coordx,jdbcType=DOUBLE},
      coordy = #{coordy,jdbcType=DOUBLE},
      coordz = #{coordz,jdbcType=DOUBLE},
      name = #{name,jdbcType=VARCHAR},
      install_time = #{installTime,jdbcType=TIMESTAMP},
      upload_type = #{uploadType,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      zone = #{zone,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      work = #{work,jdbcType=BIT},
      lose_rate = #{loseRate,jdbcType=DOUBLE},
      alarm = #{alarm,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leoli.inhouse.web.dao.model.PosBaseStation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_station
    set base_no = #{baseNo,jdbcType=VARCHAR},
      group_code = #{groupCode,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      main = #{main,jdbcType=INTEGER},
      time_correction_value = #{timeCorrectionValue,jdbcType=VARCHAR},
      coordx = #{coordx,jdbcType=DOUBLE},
      coordy = #{coordy,jdbcType=DOUBLE},
      coordz = #{coordz,jdbcType=DOUBLE},
      name = #{name,jdbcType=VARCHAR},
      install_time = #{installTime,jdbcType=TIMESTAMP},
      upload_type = #{uploadType,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      zone = #{zone,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      work = #{work,jdbcType=BIT},
      lose_rate = #{loseRate,jdbcType=DOUBLE},
      alarm = #{alarm,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- Add methods -->
  <select id="selectWithPage" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_station
    <where>
    	<if test="filter.id != null and filter.id != ''">
            AND id =#{filter.id }
        </if>
        <if test="filter.baseNo != null and filter.baseNo != ''">
            AND base_no =#{filter.baseNo }
        </if>
        <if test="filter.groupCode != null and filter.groupCode != ''">
            AND group_code =#{filter.groupCode }
        </if>
        <if test="filter.name != null and filter.name != ''">
            AND name =#{filter.name }
        </if>
        <if test="filter.ip != null and filter.ip != ''">
            AND ip =#{filter.ip }
        </if>
        <if test="filter.zone != null and filter.zone != ''">
            AND zone =#{filter.zone }
        </if>
        <if test="filter.owner != null and filter.owner != ''">
            AND owner =#{filter.owner }
        </if>
        <if test="filter.work != null">
            AND work =#{filter.work }
        </if>
    </where>
  </select>
</mapper>