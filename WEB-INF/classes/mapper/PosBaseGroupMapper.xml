<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leoli.inhouse.web.dao.mapper.PosBaseGroupMapper" >
  <resultMap id="BaseResultMap" type="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="group_code" property="groupCode" jdbcType="VARCHAR" />
    <result column="group_base_size" property="groupBaseSize" jdbcType="INTEGER" />
    <result column="min_base_size" property="minBaseSize" jdbcType="INTEGER" />
    <result column="map_id" property="mapId" jdbcType="INTEGER" />
    <result column="algorithm_type" property="algorithmType" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.leoli.inhouse.web.dao.model.PosBaseGroup" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    group_code, group_base_size, min_base_size, map_id, algorithm_type, create_user, 
    create_time, update_user, update_time
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pos_base_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_group
    where group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pos_base_group
    where group_code = #{groupCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pos_base_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pos_base_group (group_code, group_base_size, min_base_size, 
      map_id, algorithm_type, create_user, 
      create_time, update_user, update_time, 
      description)
    values (#{groupCode,jdbcType=VARCHAR}, #{groupBaseSize,jdbcType=INTEGER}, #{minBaseSize,jdbcType=INTEGER}, 
      #{mapId,jdbcType=INTEGER}, #{algorithmType,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pos_base_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupCode != null" >
        group_code,
      </if>
      <if test="groupBaseSize != null" >
        group_base_size,
      </if>
      <if test="minBaseSize != null" >
        min_base_size,
      </if>
      <if test="mapId != null" >
        map_id,
      </if>
      <if test="algorithmType != null" >
        algorithm_type,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupCode != null" >
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="groupBaseSize != null" >
        #{groupBaseSize,jdbcType=INTEGER},
      </if>
      <if test="minBaseSize != null" >
        #{minBaseSize,jdbcType=INTEGER},
      </if>
      <if test="mapId != null" >
        #{mapId,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        #{algorithmType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroupExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pos_base_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    <set >
      <if test="record.groupCode != null" >
        group_code = #{record.groupCode,jdbcType=VARCHAR},
      </if>
      <if test="record.groupBaseSize != null" >
        group_base_size = #{record.groupBaseSize,jdbcType=INTEGER},
      </if>
      <if test="record.minBaseSize != null" >
        min_base_size = #{record.minBaseSize,jdbcType=INTEGER},
      </if>
      <if test="record.mapId != null" >
        map_id = #{record.mapId,jdbcType=INTEGER},
      </if>
      <if test="record.algorithmType != null" >
        algorithm_type = #{record.algorithmType,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    set group_code = #{record.groupCode,jdbcType=VARCHAR},
      group_base_size = #{record.groupBaseSize,jdbcType=INTEGER},
      min_base_size = #{record.minBaseSize,jdbcType=INTEGER},
      map_id = #{record.mapId,jdbcType=INTEGER},
      algorithm_type = #{record.algorithmType,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    set group_code = #{record.groupCode,jdbcType=VARCHAR},
      group_base_size = #{record.groupBaseSize,jdbcType=INTEGER},
      min_base_size = #{record.minBaseSize,jdbcType=INTEGER},
      map_id = #{record.mapId,jdbcType=INTEGER},
      algorithm_type = #{record.algorithmType,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    <set >
      <if test="groupBaseSize != null" >
        group_base_size = #{groupBaseSize,jdbcType=INTEGER},
      </if>
      <if test="minBaseSize != null" >
        min_base_size = #{minBaseSize,jdbcType=INTEGER},
      </if>
      <if test="mapId != null" >
        map_id = #{mapId,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        algorithm_type = #{algorithmType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where group_code = #{groupCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    set group_base_size = #{groupBaseSize,jdbcType=INTEGER},
      min_base_size = #{minBaseSize,jdbcType=INTEGER},
      map_id = #{mapId,jdbcType=INTEGER},
      algorithm_type = #{algorithmType,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where group_code = #{groupCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leoli.inhouse.web.dao.model.PosBaseGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pos_base_group
    set group_base_size = #{groupBaseSize,jdbcType=INTEGER},
      min_base_size = #{minBaseSize,jdbcType=INTEGER},
      map_id = #{mapId,jdbcType=INTEGER},
      algorithm_type = #{algorithmType,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where group_code = #{groupCode,jdbcType=VARCHAR}
  </update>
  
  <!-- Add methods -->
  <select id="selectWithPage" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pos_base_group
    <where>
        <if test="filter.groupCode != null and filter.groupCode != ''">
            AND group_code =#{filter.groupCode }
        </if>
    </where>
  </select>
</mapper>